{"ast":null,"code":"var _jsxFileName = \"/Users/michaelscoli/Desktop/Stevens/Spring '23/CS 554/Final Project /PAM/src/components/Features/GenerateEmails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openai = new OpenAIApi(new Configuration({\n  apiKey: process.env.REACT_APP_OPENAI_KEY\n}));\nasync function getResults(prompt) {\n  let completion;\n  try {\n    completion = await openai.createChatCompletion({\n      model: 'gpt-3.5-turbo',\n      messages: [{\n        role: 'user',\n        content: prompt\n      }]\n    });\n  } catch (e) {\n    console.log(e.response.data);\n  }\n  return completion;\n}\nconst GenerateEmails = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [response, setResponse] = useState('');\n  const fetchData = async () => {\n    const res = await getResults(inputValue);\n    setResponse(res.data.choices[0].message.content);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '30vh',\n      padding: 4,\n      backgroundColor: '#f5f5f5'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        mb: 4,\n        children: \"Chat with ChatGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        width: 1,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Enter your prompt\",\n          fullWidth: true,\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: fetchData,\n          sx: {\n            mt: 2\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Response from ChatGPT:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        mt: 2,\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(GenerateEmails, \"NZ+rCo7ro7HZFWIuVU7nK81Ipe8=\");\n_c = GenerateEmails;\nexport default GenerateEmails;\nvar _c;\n$RefreshReg$(_c, \"GenerateEmails\");","map":{"version":3,"names":["React","useState","useEffect","Configuration","OpenAIApi","TextField","Box","Button","Typography","jsxDEV","_jsxDEV","openai","apiKey","process","env","REACT_APP_OPENAI_KEY","getResults","prompt","completion","createChatCompletion","model","messages","role","content","e","console","log","response","data","GenerateEmails","_s","inputValue","setInputValue","setResponse","fetchData","res","choices","message","sx","display","flexDirection","minHeight","padding","backgroundColor","children","alignItems","justifyContent","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","component","width","label","fullWidth","value","onChange","target","color","onClick","mt","flexGrow","_c","$RefreshReg$"],"sources":["/Users/michaelscoli/Desktop/Stevens/Spring '23/CS 554/Final Project /PAM/src/components/Features/GenerateEmails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nconst openai = new OpenAIApi(\n    new Configuration({\n        apiKey: process.env.REACT_APP_OPENAI_KEY,\n    })\n);\n\nasync function getResults(prompt) {\n    let completion;\n    try {\n        completion = await openai.createChatCompletion({\n            model: 'gpt-3.5-turbo',\n            messages: [{ role: 'user', content: prompt }],\n        });\n    } catch (e) {\n        console.log(e.response.data);\n    }\n\n    return completion;\n}\n\nconst GenerateEmails = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [response, setResponse] = useState('');\n\n    const fetchData = async () => {\n        const res = await getResults(inputValue);\n        setResponse(res.data.choices[0].message.content);\n    };\n\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                minHeight: '30vh',\n                padding: 4,\n                backgroundColor: '#f5f5f5',\n            }}\n        >\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'flex-start',\n                }}\n            >\n                <Typography variant=\"h4\" mb={4}>\n                    Chat with ChatGPT\n                </Typography>\n                <Box component=\"form\" width={1}>\n                    <TextField\n                        label=\"Enter your prompt\"\n                        fullWidth\n                        value={inputValue}\n                        onChange={(e) => setInputValue(e.target.value)}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={fetchData}\n                        sx={{ mt: 2 }}\n                    >\n                        Submit\n                    </Button>\n                </Box>\n            </Box>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flexGrow: 1,\n                }}\n            >\n                <Typography variant=\"subtitle1\">\n                    Response from ChatGPT:\n                </Typography>\n                <Typography variant=\"body1\" mt={2}>\n                    {response}\n                </Typography>\n            </Box>\n        </Box>\n    );\n};\n\nexport default GenerateEmails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}