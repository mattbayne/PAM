{"ast":null,"code":"var _jsxFileName = \"/Users/michaelscoli/Desktop/Stevens/Spring '23/CS 554/Final Project /PAM/src/components/Features/GenerateEmails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GenerateEmails = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [purpose, setPurpose] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const convertNewLinesToBreaks = text => {\n    return text.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this));\n  };\n  const generateEmail = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const {\n        data: {\n          emailContent\n        }\n      } = await axios.post('http://localhost:4000/api/generate-email', {\n        purpose\n      });\n      console.log(emailContent);\n      setResponse(emailContent);\n    } catch (error) {\n      setError('Failed to generate email.');\n    }\n    setLoading(false);\n  };\n  const sendEmail = async () => {\n    setError('');\n    try {\n      await axios.post('http://localhost:4000/api/send-email', {\n        email,\n        content: response\n      });\n      alert('Email sent!');\n    } catch (error) {\n      setError('Failed to send email.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '30vh',\n      padding: 4,\n      backgroundColor: '#f5f5f5'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        mb: 4,\n        children: \"What email would you like to send?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        width: 1,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Recipient Email\",\n          fullWidth: true,\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          multiline: true,\n          rows: 10,\n          rowsMax: 20,\n          value: response,\n          onChange: e => setResponse(e.target.value),\n          fullWidth: true,\n          variant: \"outlined\",\n          margin: \"normal\",\n          InputProps: {\n            readOnly: !response\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: generateEmail,\n          sx: {\n            mt: 2\n          },\n          children: \"Generate Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Response from ChatGPT:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          mt: 2,\n          children: \"Generating email...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(TextField, {\n        multiline: true,\n        rows: 6,\n        value: response,\n        onChange: e => setResponse(e.target.value),\n        fullWidth: true,\n        variant: \"outlined\",\n        margin: \"normal\",\n        InputProps: {\n          readOnly: !response\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"error\",\n        mt: 2,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this), response && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: sendEmail,\n        sx: {\n          mt: 2\n        },\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(GenerateEmails, \"0JoaVKTbNpYdFITUToqYzzxgsP0=\");\n_c = GenerateEmails;\nexport default GenerateEmails;\nvar _c;\n$RefreshReg$(_c, \"GenerateEmails\");","map":{"version":3,"names":["React","useState","TextField","Box","Button","Typography","CircularProgress","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GenerateEmails","_s","email","setEmail","purpose","setPurpose","response","setResponse","loading","setLoading","error","setError","convertNewLinesToBreaks","text","split","map","line","index","children","fileName","_jsxFileName","lineNumber","columnNumber","generateEmail","data","emailContent","post","console","log","sendEmail","content","alert","sx","display","flexDirection","minHeight","padding","backgroundColor","alignItems","justifyContent","variant","mb","component","width","label","fullWidth","value","onChange","e","target","multiline","rows","rowsMax","margin","InputProps","readOnly","color","onClick","mt","flexGrow","_c","$RefreshReg$"],"sources":["/Users/michaelscoli/Desktop/Stevens/Spring '23/CS 554/Final Project /PAM/src/components/Features/GenerateEmails.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport axios from 'axios';\n\nconst GenerateEmails = () => {\n    const [email, setEmail] = useState('');\n    const [purpose, setPurpose] = useState('');\n    const [response, setResponse] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const convertNewLinesToBreaks = (text) => {\n        return text.split('\\n').map((line, index) => (\n            <React.Fragment key={index}>\n                {line}\n                <br />\n            </React.Fragment>\n        ));\n    };\n\n    const generateEmail = async () => {\n        setLoading(true);\n        setError('');\n        try {\n            const {data: {emailContent}} = await axios.post('http://localhost:4000/api/generate-email', { purpose });\n            console.log(emailContent);\n            setResponse(emailContent);\n        } catch (error) {\n            setError('Failed to generate email.');\n        }\n        setLoading(false);\n    };\n\n    const sendEmail = async () => {\n        setError('');\n        try {\n            await axios.post('http://localhost:4000/api/send-email', { email, content: response });\n            alert('Email sent!');\n        } catch (error) {\n            setError('Failed to send email.');\n        }\n    };\n\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                minHeight: '30vh',\n                padding: 4,\n                backgroundColor: '#f5f5f5',\n            }}\n        >\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'flex-start',\n                }}\n            >\n                <Typography variant=\"h4\" mb={4}>\n                    What email would you like to send?\n                </Typography>\n                <Box component=\"form\" width={1}>\n                    <TextField\n                        label=\"Recipient Email\"\n                        fullWidth\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        sx={{ mb: 2 }}\n                    />\n                    <TextField\n                        multiline\n                        rows={10}\n                        rowsMax={20}\n                        value={response}\n                        onChange={(e) => setResponse(e.target.value)}\n                        fullWidth\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        InputProps={{ readOnly: !response }}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={generateEmail}\n                        sx={{ mt: 2 }}\n                    >\n                        Generate Email\n                    </Button>\n                </Box>\n            </Box>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flexGrow: 1,\n                }}\n            >\n                <Typography variant=\"subtitle1\">Response from ChatGPT:</Typography>\n                {loading ? (\n                    <>\n                        <CircularProgress />\n                        <Typography variant=\"body2\" mt={2}>\n                            Generating email...\n                        </Typography>\n                    </>\n                ) : (\n                    <TextField\n                        multiline\n                        rows={6}\n                        value={response}\n                        onChange={(e) => setResponse(e.target.value)}\n                        fullWidth\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        InputProps={{ readOnly: !response }}\n                    />\n                )}\n                {error && (\n                    <Typography variant=\"body2\" color=\"error\" mt={2}>\n                        {error}\n                    </Typography>\n                )}\n                {response && (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={sendEmail}\n                        sx={{ mt: 2 }}\n                    >\n                        Send Email\n                    </Button>\n                )}\n            </Box>\n        </Box>\n    );\n};\n\nexport default GenerateEmails;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMuB,uBAAuB,GAAIC,IAAI,IAAK;IACtC,OAAOA,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpCpB,OAAA,CAACT,KAAK,CAACU,QAAQ;MAAAoB,QAAA,GACVF,IAAI,eACLnB,OAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA,GAFWL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAI7B,CAAC;EACN,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9Bd,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACA,MAAM;QAACa,IAAI,EAAE;UAACC;QAAY;MAAC,CAAC,GAAG,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,0CAA0C,EAAE;QAAEtB;MAAQ,CAAC,CAAC;MACxGuB,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;MACzBlB,WAAW,CAACkB,YAAY,CAAC;IAC7B,CAAC,CAAC,OAAOf,KAAK,EAAE;MACZC,QAAQ,CAAC,2BAA2B,CAAC;IACzC;IACAF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1BlB,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACA,MAAMhB,KAAK,CAAC+B,IAAI,CAAC,sCAAsC,EAAE;QAAExB,KAAK;QAAE4B,OAAO,EAAExB;MAAS,CAAC,CAAC;MACtFyB,KAAK,CAAC,aAAa,CAAC;IACxB,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACZC,QAAQ,CAAC,uBAAuB,CAAC;IACrC;EACJ,CAAC;EAED,oBACId,OAAA,CAACN,GAAG;IACAyC,EAAE,EAAE;MACAC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,SAAS,EAAE,MAAM;MACjBC,OAAO,EAAE,CAAC;MACVC,eAAe,EAAE;IACrB,CAAE;IAAAnB,QAAA,gBAEFrB,OAAA,CAACN,GAAG;MACAyC,EAAE,EAAE;QACAC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBI,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MACpB,CAAE;MAAArB,QAAA,gBAEFrB,OAAA,CAACJ,UAAU;QAAC+C,OAAO,EAAC,IAAI;QAACC,EAAE,EAAE,CAAE;QAAAvB,QAAA,EAAC;MAEhC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACbzB,OAAA,CAACN,GAAG;QAACmD,SAAS,EAAC,MAAM;QAACC,KAAK,EAAE,CAAE;QAAAzB,QAAA,gBAC3BrB,OAAA,CAACP,SAAS;UACNsD,KAAK,EAAC,iBAAiB;UACvBC,SAAS;UACTC,KAAK,EAAE5C,KAAM;UACb6C,QAAQ,EAAGC,CAAC,IAAK7C,QAAQ,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1Cd,EAAE,EAAE;YAAES,EAAE,EAAE;UAAE;QAAE;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAChB,eACFzB,OAAA,CAACP,SAAS;UACN4D,SAAS;UACTC,IAAI,EAAE,EAAG;UACTC,OAAO,EAAE,EAAG;UACZN,KAAK,EAAExC,QAAS;UAChByC,QAAQ,EAAGC,CAAC,IAAKzC,WAAW,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CD,SAAS;UACTL,OAAO,EAAC,UAAU;UAClBa,MAAM,EAAC,QAAQ;UACfC,UAAU,EAAE;YAAEC,QAAQ,EAAE,CAACjD;UAAS;QAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACtC,eACFzB,OAAA,CAACL,MAAM;UACHgD,OAAO,EAAC,WAAW;UACnBgB,KAAK,EAAC,SAAS;UACfC,OAAO,EAAElC,aAAc;UACvBS,EAAE,EAAE;YAAE0B,EAAE,EAAE;UAAE,CAAE;UAAAxC,QAAA,EACjB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eACNzB,OAAA,CAACN,GAAG;MACAyC,EAAE,EAAE;QACAC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBI,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBoB,QAAQ,EAAE;MACd,CAAE;MAAAzC,QAAA,gBAEFrB,OAAA,CAACJ,UAAU;QAAC+C,OAAO,EAAC,WAAW;QAAAtB,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,EAClEd,OAAO,gBACJX,OAAA,CAAAE,SAAA;QAAAmB,QAAA,gBACIrB,OAAA,CAACH,gBAAgB;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACpBzB,OAAA,CAACJ,UAAU;UAAC+C,OAAO,EAAC,OAAO;UAACkB,EAAE,EAAE,CAAE;UAAAxC,QAAA,EAAC;QAEnC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAa;MAAA,gBACd,gBAEHzB,OAAA,CAACP,SAAS;QACN4D,SAAS;QACTC,IAAI,EAAE,CAAE;QACRL,KAAK,EAAExC,QAAS;QAChByC,QAAQ,EAAGC,CAAC,IAAKzC,WAAW,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CD,SAAS;QACTL,OAAO,EAAC,UAAU;QAClBa,MAAM,EAAC,QAAQ;QACfC,UAAU,EAAE;UAAEC,QAAQ,EAAE,CAACjD;QAAS;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAE3C,EACAZ,KAAK,iBACFb,OAAA,CAACJ,UAAU;QAAC+C,OAAO,EAAC,OAAO;QAACgB,KAAK,EAAC,OAAO;QAACE,EAAE,EAAE,CAAE;QAAAxC,QAAA,EAC3CR;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEb,EACAhB,QAAQ,iBACLT,OAAA,CAACL,MAAM;QACHgD,OAAO,EAAC,WAAW;QACnBgB,KAAK,EAAC,SAAS;QACfC,OAAO,EAAE5B,SAAU;QACnBG,EAAE,EAAE;UAAE0B,EAAE,EAAE;QAAE,CAAE;QAAAxC,QAAA,EACjB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAACrB,EAAA,CAxIID,cAAc;AAAA4D,EAAA,GAAd5D,cAAc;AA0IpB,eAAeA,cAAc;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}