{"ast":null,"code":"var _jsxFileName = \"/Users/michaelscoli/Desktop/Stevens/Spring '23/CS 554/Final Project /PAM/src/components/Features/GenerateEmails.js\",\n  _s = $RefreshSig$();\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { useEffect, useState } from \"react\";\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openai = new OpenAIApi(new Configuration({\n  apiKey: process.env.REACT_APP_OPENAI_KEY\n}));\nasync function getResults(prompt) {\n  let completion;\n  try {\n    completion = await openai.createChatCompletion({\n      model: 'gpt-3.5-turbo',\n      messages: [{\n        role: 'user',\n        content: prompt\n      }]\n    });\n  } catch (e) {\n    console.log(e.response.data);\n  }\n  return completion;\n}\nconst GenerateEmails = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [response, setResponse] = useState('');\n  const fetchData = async () => {\n    const res = await getResults(inputValue);\n    setResponse(res.data.choices[0].message.content);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: '100vh',\n      padding: 4,\n      backgroundColor: '#f5f5f5'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      mb: 4,\n      children: \"Chat with ChatGPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      width: 1,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Enter your prompt\",\n        fullWidth: true,\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: fetchData,\n        sx: {\n          mt: 2\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      mt: 4,\n      children: \"Response from ChatGPT:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      mt: 2,\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(GenerateEmails, \"NZ+rCo7ro7HZFWIuVU7nK81Ipe8=\");\n_c = GenerateEmails;\nexport default GenerateEmails;\nvar _c;\n$RefreshReg$(_c, \"GenerateEmails\");","map":{"version":3,"names":["Configuration","OpenAIApi","useEffect","useState","TextField","Box","Button","Typography","jsxDEV","_jsxDEV","openai","apiKey","process","env","REACT_APP_OPENAI_KEY","getResults","prompt","completion","createChatCompletion","model","messages","role","content","e","console","log","response","data","GenerateEmails","_s","inputValue","setInputValue","setResponse","fetchData","res","choices","message","sx","display","flexDirection","alignItems","justifyContent","minHeight","padding","backgroundColor","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","component","width","label","fullWidth","value","onChange","target","color","onClick","mt","_c","$RefreshReg$"],"sources":["/Users/michaelscoli/Desktop/Stevens/Spring '23/CS 554/Final Project /PAM/src/components/Features/GenerateEmails.js"],"sourcesContent":["import { Configuration, OpenAIApi } from \"openai\";\nimport {useEffect, useState} from \"react\";\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nconst openai = new OpenAIApi(\n    new Configuration({\n        apiKey: process.env.REACT_APP_OPENAI_KEY,\n    })\n);\n\nasync function getResults(prompt) {\n    let completion;\n    try {\n        completion = await openai.createChatCompletion({\n            model: 'gpt-3.5-turbo',\n            messages: [{ role: 'user', content: prompt }],\n        });\n    } catch (e) {\n        console.log(e.response.data);\n    }\n\n    return completion;\n}\n\nconst GenerateEmails = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [response, setResponse] = useState('');\n\n    const fetchData = async () => {\n        const res = await getResults(inputValue);\n        setResponse(res.data.choices[0].message.content);\n    };\n\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                minHeight: '100vh',\n                padding: 4,\n                backgroundColor: '#f5f5f5',\n            }}\n        >\n            <Typography variant=\"h4\" mb={4}>\n                Chat with ChatGPT\n            </Typography>\n            <Box component=\"form\" width={1}>\n                <TextField\n                    label=\"Enter your prompt\"\n                    fullWidth\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={fetchData}\n                    sx={{ mt: 2 }}\n                >\n                    Submit\n                </Button>\n            </Box>\n            <Typography variant=\"subtitle1\" mt={4}>\n                Response from ChatGPT:\n            </Typography>\n            <Typography variant=\"body1\" mt={2}>\n                {response}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default GenerateEmails;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}