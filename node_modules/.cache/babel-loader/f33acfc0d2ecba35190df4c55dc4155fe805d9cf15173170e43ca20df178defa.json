{"ast":null,"code":"var _jsxFileName = \"/Users/michaelscoli/Desktop/Stevens/Spring '23/CS 554/Final Project /PAM/src/components/Features/GenerateEmails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GenerateEmails = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [purpose, setPurpose] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const generateEmail = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.post('/api/generate-email', {\n        purpose\n      });\n      const generatedEmail = res.data.choices[0].message.content;\n      setResponse(generatedEmail);\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n  const sendEmail = async () => {\n    try {\n      await axios.post('/api/send-email', {\n        email,\n        content: response\n      });\n      alert('Email sent!');\n    } catch (error) {\n      console.error(error);\n      alert('Failed to send email.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '30vh',\n      padding: 4,\n      backgroundColor: '#f5f5f5'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        mb: 4,\n        children: \"What email would you like to send?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        width: 1,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Recipient Email\",\n          fullWidth: true,\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email Purpose\",\n          fullWidth: true,\n          value: purpose,\n          onChange: e => setPurpose(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: generateEmail,\n          sx: {\n            mt: 2\n          },\n          children: \"Generate Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Response from ChatGPT:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          mt: 2,\n          children: \"Generating email...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        mt: 2,\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), response && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: sendEmail,\n        sx: {\n          mt: 2\n        },\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(GenerateEmails, \"iXmHjOWJH3x4MEAHImQnVYW/ylU=\");\n_c = GenerateEmails;\nexport default GenerateEmails;\nvar _c;\n$RefreshReg$(_c, \"GenerateEmails\");","map":{"version":3,"names":["React","useState","TextField","Box","Button","Typography","CircularProgress","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GenerateEmails","_s","email","setEmail","purpose","setPurpose","response","setResponse","loading","setLoading","generateEmail","res","post","generatedEmail","data","choices","message","content","error","console","sendEmail","alert","sx","display","flexDirection","minHeight","padding","backgroundColor","children","alignItems","justifyContent","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","component","width","label","fullWidth","value","onChange","e","target","color","onClick","mt","flexGrow","_c","$RefreshReg$"],"sources":["/Users/michaelscoli/Desktop/Stevens/Spring '23/CS 554/Final Project /PAM/src/components/Features/GenerateEmails.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport axios from 'axios';\n\nconst GenerateEmails = () => {\n    const [email, setEmail] = useState('');\n    const [purpose, setPurpose] = useState('');\n    const [response, setResponse] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const generateEmail = async () => {\n        setLoading(true);\n        try {\n            const res = await axios.post('/api/generate-email', { purpose });\n            const generatedEmail = res.data.choices[0].message.content;\n            setResponse(generatedEmail);\n        } catch (error) {\n            console.error(error);\n        }\n        setLoading(false);\n    };\n\n    const sendEmail = async () => {\n        try {\n            await axios.post('/api/send-email', { email, content: response });\n            alert('Email sent!');\n        } catch (error) {\n            console.error(error);\n            alert('Failed to send email.');\n        }\n    };\n\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                minHeight: '30vh',\n                padding: 4,\n                backgroundColor: '#f5f5f5',\n            }}\n        >\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'flex-start',\n                }}\n            >\n                <Typography variant=\"h4\" mb={4}>\n                    What email would you like to send?\n                </Typography>\n                <Box component=\"form\" width={1}>\n                    <TextField\n                        label=\"Recipient Email\"\n                        fullWidth\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        sx={{ mb: 2 }}\n                    />\n                    <TextField\n                        label=\"Email Purpose\"\n                        fullWidth\n                        value={purpose}\n                        onChange={(e) => setPurpose(e.target.value)}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={generateEmail}\n                        sx={{ mt: 2 }}\n                    >\n                        Generate Email\n                    </Button>\n                </Box>\n            </Box>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flexGrow: 1,\n                }}\n            >\n                <Typography variant=\"subtitle1\">Response from ChatGPT:</Typography>\n                {loading ? (\n                    <>\n                        <CircularProgress />\n                        <Typography variant=\"body2\" mt={2}>\n                            Generating email...\n                        </Typography>\n                    </>\n                ) : (\n                    <Typography variant=\"body1\" mt={2}>\n                        {response}\n                    </Typography>\n                )}\n                {response && (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={sendEmail}\n                        sx={{ mt: 2 }}\n                    >\n                        Send Email\n                    </Button>\n                )}\n            </Box>\n        </Box>\n    );\n};\n\nexport default GenerateEmails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}